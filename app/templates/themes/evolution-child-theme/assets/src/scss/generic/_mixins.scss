/*------------------------------------*\
    $MIXINS
\*------------------------------------*/
/**
 * Create a fully formed type style (sizing and vertical rhythm) by passing in a
 * single value, e.g.:
 *
   `@include font-size(10px);`
 *
 * Thanks to @redclov3r for the `line-height` Sass:
 * twitter.com/redclov3r/status/250301539321798657
 */
@mixin font-size($font-size) {
  font-size: $font-size;
  font-size: ($font-size / $base-font-size) * 1rem;
  line-height: ceil($font-size / $base-line-height) * ($base-line-height / $font-size);
}


/**
 * Better Image Replacement
 */
@mixin hidden-text {
  text-indent: 110%;
  white-space: nowrap;
  overflow: hidden;
}


/**
 * Stylable Ordered Lists
 *
 * Prefixes each item w/ a counter based on all items in the parent
 */
@mixin cust-list {
  counter-reset: item;
  list-style-type: none;

  & > li:before {
    content: counter(item) ". ";
    counter-increment: item;
  }
}


/**
 * Styles the counter to act more like an order list ie. hanging punctuation
 */
@mixin hang-list {
  counter-reset: item;
  list-style-type: none;
  padding-left: 3.25em;

  & > li {
    position: relative;

    &:before {
      content: counter(item);
      counter-increment: item;
      left: -2em;
      position: absolute;
      text-align: right;
      width: 1.625em;
    }
  }
}


/**
 * Force overly long spans of text to truncate, e.g.:
 *
  @include truncate(100%);`
 *
 * Where `$truncation-boundary` is a united measurement.
 */
@mixin truncate($truncation-boundary) {
  max-width: $truncation-boundary;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}


/**
 * CSS arrows!!! But... before you read on, you might want to grab a coffee...
 *
 * This mixin creates a CSS arrow on a given element. We can have the arrow
 * appear in one of 12 locations, thus:
 *
 *       01    02    03
 *    +------------------+
 * 12 |                  | 04
 *    |                  |
 * 11 |                  | 05
 *    |                  |
 * 10 |                  | 06
 *    +------------------+
 *       09    08    07
 *
 * You pass this position in along with a desired arrow color and optional
 * border color, for example:
 *
 * `@include arrow(top, left, red)`
 *
 * for just a single, red arrow, or:
 *
 * `@include arrow(bottom, center, red, black)`
 *
 * which will create a red triangle with a black border which sits at the bottom
 * center of the element. Call the mixin thus:
 *
  .foo{
    background-color:#BADA55;
    border:1px solid #ACE;
    @include arrow(top, left, #BADA55, #ACE);
  }
 *
 */
@mixin arrow($arrow-edge, $arrow-location, $arrow-color, $border-color: $arrow-color) {

  @if $arrow-edge == top {

    @extend %arrow--top;

    &:before {
      border-bottom-color: $border-color;
    }

    &:after {
      border-bottom-color: $arrow-color;
    }

    @if $arrow-location == left {
      @extend %arrow--left;
    }

    @if $arrow-location == center {
      @extend %arrow--center;
    }

    @if $arrow-location == right {
      @extend %arrow--right;
    }
  }

  @if $arrow-edge == right {

    @extend %arrow--far;

    &:before {
      border-left-color: $border-color;
    }

    &:after {
      border-left-color: $arrow-color;
    }

    @if $arrow-location == top {
      @extend %arrow--upper;
    }

    @if $arrow-location == center {
      @extend %arrow--middle;
    }

    @if $arrow-location == bottom {
      @extend %arrow--lower;
    }
  }

  @if $arrow-edge == bottom {

    @extend %arrow--bottom;

    &:before {
      border-top-color: $border-color;
    }

    &:after {
      border-top-color: $arrow-color;
    }

    @if $arrow-location == left {
      @extend %arrow--left;
    }

    @if $arrow-location == center {
      @extend %arrow--center;
    }

    @if $arrow-location == right {
      @extend %arrow--right;
    }
  }

  @if $arrow-edge == left{

    @extend %arrow--near;

    &:before {
      border-right-color: $border-color;
    }

    &:after {
      border-right-color: $arrow-color;
    }

    @if $arrow-location == top {
      @extend %arrow--upper;
    }

    @if $arrow-location == center {
      @extend %arrow--middle;
    }

    @if $arrow-location == bottom {
      @extend %arrow--lower;
    }
  }
}
